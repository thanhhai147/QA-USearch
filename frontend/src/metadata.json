{
    "docstore": [
        {
            "metadata": {
                "id": "data\\monopoly.pdf:0:0"
            },
            "page_content": "MONOPOLY \nProperty Trading Game from Parker Brothers\" \nAGES 8+ \n2 to 8 Players \nContents: Gameboard, 3 dice, tokens, 32 houses, I2 hotels, Chance \nand Community Chest cards, Title Deed cards, play money and a Banker's tray.",
            "id": "0"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:0:1"
            },
            "page_content": "Now there's a faster way to play MONOPOLY.",
            "id": "1"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:0:2"
            },
            "page_content": "Choose to play by \nthe classic rules for buying, renting and selling properties or use the \nSpeed Die to get into the action faster.",
            "id": "2"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:0:3"
            },
            "page_content": "If you've never played the classic \nMONOPOLY game, refer to the Classic Rules beginning on the next page.",
            "id": "3"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:0:4"
            },
            "page_content": "If you already know how to play and want to use the Speed Die, just \nread the section below for the additional Speed Die rules.",
            "id": "4"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:0:5"
            },
            "page_content": "SPEED DIE RULES \nLearnins how to Play with the S~eed Die IS as \n/ \n fast as playing with i't.",
            "id": "5"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:0:6"
            },
            "page_content": "1.",
            "id": "6"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:0:7"
            },
            "page_content": "When starting the game, hand out an extra $1,000 to each player \n(two $5005 should work). The game moves fast and you'll need \nthe extra cash to buy and build.",
            "id": "7"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:0:8"
            },
            "page_content": "2.",
            "id": "8"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:0:9"
            },
            "page_content": "Do not use the Speed Die until you've landed on or passed over \nGO for the first time.",
            "id": "9"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:0:10"
            },
            "page_content": "Once you collect that first $200 salary, you'll \nuse the Speed Die for the rest of the game.",
            "id": "10"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:0:11"
            },
            "page_content": "This means that some \nplayers will start using the die before others.",
            "id": "11"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:0:12"
            },
            "page_content": "3.",
            "id": "12"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:0:13"
            },
            "page_content": "Once you start using the Speed Die, roll it along with the two \nwhite dice on your turn.",
            "id": "13"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:0:14"
            },
            "page_content": "Then do the following depending on \nwhat you rolled.",
            "id": "14"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:0:15"
            },
            "page_content": "1, 2, or 3: Add this number to the roll of the two white \ndice.",
            "id": "15"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:0:16"
            },
            "page_content": "You'll zoom around the board.",
            "id": "16"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:0:17"
            },
            "page_content": "",
            "id": "17"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:0"
            },
            "page_content": "Bus: This lets you \"get off the bus early.\" Look at the two white \ndice. You can move the value of one die, the other die, or the \nsum of both dice.",
            "id": "18"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:1"
            },
            "page_content": "So if you rolled a 1 and a 5, you can move \n1 space, 5 spaces, or 6 spaces: \\t's your choice.",
            "id": "19"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:2"
            },
            "page_content": "Mr.",
            "id": "20"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:3"
            },
            "page_content": "Monopoly: First, move the sum of the two white dice \nand resolve the space you land on (such as drawing a card, \nbuying the property, paying rent, etc.).",
            "id": "21"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:4"
            },
            "page_content": "Then, one of two \nthings will happen depending on whether or not there is still \nproperty in the bank.",
            "id": "22"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:5"
            },
            "page_content": "YES, there is property in the bank -Advance to the NEXT \nproperty that the bank still holds and buy it if you wish.",
            "id": "23"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:6"
            },
            "page_content": "If you \ndon't want to buy this property, move to the space anyway \nand put the property up for auction.",
            "id": "24"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:7"
            },
            "page_content": "NO, there are no more properties in the bank - Advance to the \nNOCT property on which you will owe another player money.",
            "id": "25"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:8"
            },
            "page_content": "A few minor details: \nOnly the white dice are used when determining if you rolled doubles.",
            "id": "26"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:9"
            },
            "page_content": "Do not look at the Speed Die.",
            "id": "27"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:10"
            },
            "page_content": "If you roll a three-of-a-kind (all of the dice show the same number), \nyou can move anywhere you want on the board!",
            "id": "28"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:11"
            },
            "page_content": "If you get sent to jail during your move (either by landing on the \"Go \nto Jail\" space or by rolling doubles three times in a row) then your turn \nis over and you do not get to use the Speed Die for that turn.",
            "id": "29"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:12"
            },
            "page_content": "Use the white dice ONLY when rolling to get out of jail.",
            "id": "30"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:13"
            },
            "page_content": "L \nUse the sum of all three dice when determining how much to pay on \na utility.",
            "id": "31"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:14"
            },
            "page_content": "Note: The Bus and Mr.",
            "id": "32"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:15"
            },
            "page_content": "Monopoly are valued at 0.",
            "id": "33"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:16"
            },
            "page_content": "CLASSIC MONOPOW RULES \nOBJECT: The object of the game IS to become the \nwealthiest player through buying, renting and selling \nproperty.",
            "id": "34"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:17"
            },
            "page_content": "PREPARATION: Place the board on a table and put \nthe Chance and Community Chest cards facedown on \ntheir allotted spaces on the board.",
            "id": "35"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:18"
            },
            "page_content": "Each player chooses one token to \nrepresent himther while traveling around the board.",
            "id": "36"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:1:19"
            },
            "page_content": "",
            "id": "37"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:0"
            },
            "page_content": "Each player is given $1,500 divided as follows: P each of $500s, \n$100~ and $50~; 6 $40~; 5 each of $105, $5~ and $Is.",
            "id": "38"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:1"
            },
            "page_content": "All remaining money and other equipment go to the Bank.",
            "id": "39"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:2"
            },
            "page_content": "Stack the ..",
            "id": "40"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:3"
            },
            "page_content": "Bank's money on edge in the compartments in the plastic Banker's tray.",
            "id": "41"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:4"
            },
            "page_content": "BANKER.",
            "id": "42"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:5"
            },
            "page_content": "Select as Banker a player who will also \nmake a good Auctioneer A Banker who plays \n~n the game must keep hislher personal funds \nseparate from those of the Bank.",
            "id": "43"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:6"
            },
            "page_content": "When more than \nf~ve persons play, the Banker may elect to act only \nas Banker and Auctioneer.",
            "id": "44"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:7"
            },
            "page_content": "THE BANK: Besides the Bank's money, the Bank \nholds the Title Deed cards and houses and hotels prior to purchase \nand use by the players.",
            "id": "45"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:8"
            },
            "page_content": "The Bank pays salaries and bonuses.",
            "id": "46"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:9"
            },
            "page_content": "It sells \nand auctions properties and hands out the~r proper Title Deed cards; \nit sells houses and hotels to the players and loans money when \nrequired on mortgages.",
            "id": "47"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:10"
            },
            "page_content": "The Bank collects all taxes, fines, loans and interest, and the price of \nall properties which it sells and auctions.",
            "id": "48"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:11"
            },
            "page_content": "The Bank nwer \"goes broke.\" If the Bank runs out of money, the Banker \nmay issue as much more as needed by writing on any ordinary paper.",
            "id": "49"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:12"
            },
            "page_content": "THE PLAY: Starting with the Banker, each player in turn throws the dice.",
            "id": "50"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:13"
            },
            "page_content": "The player with the highest total starts the play: Place your \ntoken on the corner marked \"GO,\" throw the dice and move \nyour token in the direction of the arrow the number of \nspaces indicated by the dice.",
            "id": "51"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:14"
            },
            "page_content": "After you have completed \nyour play, the turn passes to the left.",
            "id": "52"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:15"
            },
            "page_content": "The tokens remain \non the spaces qccupied and proceed from that point on \nthe player's next turn.",
            "id": "53"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:16"
            },
            "page_content": "Two or more tokens may rest on the \nsame space at the same time.",
            "id": "54"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:17"
            },
            "page_content": "According to the space your token reaches, you may be entitled to \nbuy real estate or other properties - or obliged to pay rent, pay taxes, \ndraw a Chance or Community Chest card, \"Go to Jail,\" etc. If you throw doubles, you move your token as usual, the sum of the \ntwo dice, and are subject to any privileges or penalties pertaining to \nthe space on which you land.",
            "id": "55"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:18"
            },
            "page_content": "Retaining the dice, throw again and move \nyour token as before.",
            "id": "56"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:19"
            },
            "page_content": "If you throw doubles three times in succession, \nmove your token immediately to the space marked \"In Jail\" (see JAIL).",
            "id": "57"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:2:20"
            },
            "page_content": "",
            "id": "58"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:3:0"
            },
            "page_content": "\"GO\": Each time a player's token lands on or passes over \nGO, whether by throwing the dice or drawing a card, \nthe Banker pays himther a $200 sala,ry.",
            "id": "59"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:3:1"
            },
            "page_content": "The $200 is paid only once each time kound \nthe board.",
            "id": "60"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:3:2"
            },
            "page_content": "However, if a player passing GO on \nthe throw of the dice lands 2 spaces beyond it \non Community Chest, or 7 spaces beyond \nit on Chance, and draws the \"Advance to GO\" card, helshe collects \n$200 for passing GO the first time and another $200 for reaching it the \nsecond time by instructions on the card.",
            "id": "61"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:3:3"
            },
            "page_content": "BUYING PROPERTY: Whenever you land on an unowned property you \nmay buy that property from the Bank at its printed price.",
            "id": "62"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:3:4"
            },
            "page_content": "You receive the \nTitle Deed card showing ownership; place it faceup in front of you.",
            "id": "63"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:3:5"
            },
            "page_content": "If you do not wish to buy the property, the Banker sells it at auction \nto the highest bidder.",
            "id": "64"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:3:6"
            },
            "page_content": "The buyer pays the Bank the amount of the bid \nin cash and receives the Title Deed card for that property.",
            "id": "65"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:3:7"
            },
            "page_content": "Any player, \nincluding the one who declined the option to buy it at the printed \nprice, may bid.",
            "id": "66"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:3:8"
            },
            "page_content": "Bidding may start at any price.",
            "id": "67"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:3:9"
            },
            "page_content": "PAMNG \n When you land on property owned by another player, \nthe owner collects rent from you in accordance with the list printed on \nits Title Deed card.",
            "id": "68"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:3:10"
            },
            "page_content": "If the property is mortgaged, no rent can be collected.",
            "id": "69"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:3:11"
            },
            "page_content": "When a \nproperty is mortgaged, its Title Deed card is placed facedown in front \nof the owner. L \nIt is an advantage to hold all the Title Deed cards in a color- \ngroup (e.g., Boardwalk and Park Place; or Connecticut, Vermont and \nOriental Avenues) because the owner may then charge double rent \nfor unimproved properties in that color-group.",
            "id": "70"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:3:12"
            },
            "page_content": "This rule applies to \nunmortgaged properties even if another property in that color-group is \nmortgaged.",
            "id": "71"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:3:13"
            },
            "page_content": "It is even more advantageous to have houses or hotels on properties \nbecause rents are much higher than for unimproved properties.",
            "id": "72"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:3:14"
            },
            "page_content": "The owner may not collect the rent if he/she fails to ask for it before \nthe second player following throws the dice.",
            "id": "73"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:3:15"
            },
            "page_content": "\"CHANCE\" AND \"COMMUNITY CHEST\": When you land on either of \nthese spaces, take the top card from the deck indicated, follow the ",
            "id": "74"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:4:0"
            },
            "page_content": "instructions and return the card facedown to the bottom of the deck.",
            "id": "75"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:4:1"
            },
            "page_content": "The \"Get Out of Jail Free\" card is held until used and then returned to \nthe bottom of the deck.",
            "id": "76"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:4:2"
            },
            "page_content": "If the player who draws it does not wish to use \nit, helshe may sell it, at any time, to another player at a price agreeable \nto both.",
            "id": "77"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:4:3"
            },
            "page_content": "\"INCOME TAX\": If you land here you have two options: You may \nestimate your tax at $900 and pay the Bank, or you may pay 10% of \nyour total worth to the Bank.",
            "id": "78"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:4:4"
            },
            "page_content": "Your total worth is all your cash on hand, \nprinted prices of mortgaged and unmortgaged properties and cost \nprice of all buildings you own.",
            "id": "79"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:4:5"
            },
            "page_content": "You must decide which option you will take before you add up \nyour total worth.",
            "id": "80"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:4:6"
            },
            "page_content": "\"JAIL\": You land in Jail when.",
            "id": "81"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:4:7"
            },
            "page_content": "..(I) your token lands on the space \nmarked \"Go to Jail\"; (2) you draw a card marked \"Go to JailN; or \n(3) you throw doubles three times in succession.",
            "id": "82"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:4:8"
            },
            "page_content": "When you are sent to Jail you cannot \ncollect your $200 salary in that move \nsince, regardless of where your token \nis on the board, you must move it \ndirectly into Jail.",
            "id": "83"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:4:9"
            },
            "page_content": "Your turn ends when \nyou are sent to Jail.",
            "id": "84"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:4:10"
            },
            "page_content": "If you are not \"sent\" to Jail but in the ordinary course of play land on \nthat space, you are \"Just Visiting,\" you incur no penalty, and you move \nahead in the usual manner on your next turn.",
            "id": "85"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:4:11"
            },
            "page_content": "You get out of Jail by..",
            "id": "86"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:4:12"
            },
            "page_content": ".(I) throwing doubles on any of your next \nthree turns; if you succeed in doing this you immediately move forward \nthe number of spaces shown by your doubles throw; even though you \nhad thrown doubles, you do not take another turn; (2) using the \"Get \nOut of Jail Free\" card if you have it; (3) purchasing the \"Get Out of Jail \nFree\" card from another player and playing it; (4) paying a fine of $50 \nbefore you roll the dice on either of your next two turns. If you do not throw doubles by your third turn, you must pay the $50 \nfine.",
            "id": "87"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:4:13"
            },
            "page_content": "You then get out of Jail and immediately move forward the number \nof spaces shown by your throw.",
            "id": "88"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:4:14"
            },
            "page_content": "Even though you are in Jail, you may buy and sell property, buy and \nsell houses and hotels and collect rents.",
            "id": "89"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:4:15"
            },
            "page_content": "",
            "id": "90"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:5:0"
            },
            "page_content": "\"FREE PARKING\": A player landing on this place does not \nreceive any money, property or reward of any kind.",
            "id": "91"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:5:1"
            },
            "page_content": "This is just a \"free\" \nresting place.",
            "id": "92"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:5:2"
            },
            "page_content": "HOUSES: When you own all the propert~es in a color-group \nyou may buy houses from the Bank and erect them on those properties.",
            "id": "93"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:5:3"
            },
            "page_content": "If you buy one house, you may put it on any \none of those properties.",
            "id": "94"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:5:4"
            },
            "page_content": "The next house you \nbuy must be erected on one of the unimproved \nproperties of this or any other complete color- \ngroup you may own.",
            "id": "95"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:5:5"
            },
            "page_content": "The price you must pay the Bank for each \nhouse is shown on your ltle Deed card for the \nproperty on which you erect the house.",
            "id": "96"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:5:6"
            },
            "page_content": "The owner still collects double rent from an opponent who lands on \nthe unimproved properties of hisher complete color-group.",
            "id": "97"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:5:7"
            },
            "page_content": "Following the above rules, you may buy and erect at any time as \nmany houses as your judgement and financial standing will allow.",
            "id": "98"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:5:8"
            },
            "page_content": "But \nyou must build evenly, i.e., you cannot erect more than one house on \nany one property of any color-group until you have built one house on \nwery property of that group.",
            "id": "99"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:5:9"
            },
            "page_content": "You may then begin on the second row \nof houses, and so on, up to a limit of four houses to a property.",
            "id": "100"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:5:10"
            },
            "page_content": "For \nexample, you cannot build three houses on one property if you have \nonly one house on another property of that group.",
            "id": "101"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:5:11"
            },
            "page_content": "As you build evenly, you must also break down evenly ifyou sell \nhouses back to the Bank (see SELLING PROPERTY).",
            "id": "102"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:5:12"
            },
            "page_content": "HOTELS: When a player has four houses on each property of a \ncomplete color-group, hdshe may buy a hotel from the Bank and erect \nit on any property of the color-group.",
            "id": "103"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:5:13"
            },
            "page_content": "Hdshe returns the four houses \nfrom that property to the Bank and pays the price for the hotel as shown \non the Ttle Deed card.",
            "id": "104"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:5:14"
            },
            "page_content": "Only one hotel may be erected on any one \nproperty.",
            "id": "105"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:5:15"
            },
            "page_content": "BUILDING SHORTAGES: When the Bank has no houses to sell, players \nwishing to build must wait for some player to return or sell histher \nhouses to the Bank before building. If there are a limited number of \nhouses and hotels available and two or more players wish to buy more \nthan the Bank has, the houses or hotels must be sold at auction to the \nhighest bidder.",
            "id": "106"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:5:16"
            },
            "page_content": "",
            "id": "107"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:6:0"
            },
            "page_content": "SELLING PROPERN: Unimproved properties, railroads and util~ties \n(but not buildings) may be sold to any player as a private transaction \nfor any amount the owner can get; however, no property can be sold to \n - \nanother player if buildings are standing on any properties of that color- \ngroup. Any buildings so located must be sold back to the Bank before \nthe owner can sell any property of that color-group.",
            "id": "108"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:6:1"
            },
            "page_content": "Houses and hotels may be sold back to the Bank at any time for one- \nhalf the price paid for them.",
            "id": "109"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:6:2"
            },
            "page_content": "All houses on one color-group must be sold one by one, evenly, in \nreverse of the manner in which they were erected.",
            "id": "110"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:6:3"
            },
            "page_content": "All hotels on one color-group may be sold at once, or they may be \nsold one house at a time (one hotel equals five houses), evenly, in \nreverse of the manner in which they were erected.",
            "id": "111"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:6:4"
            },
            "page_content": "MORTGAGES: Unimproved properties can be mortgaged through the \nBank at any time.",
            "id": "112"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:6:5"
            },
            "page_content": "Before an improved property can be mortgaged, all \nthe buildings on all the properties of its color-group must be sold back \nto the Bank at half price.",
            "id": "113"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:6:6"
            },
            "page_content": "The mortgage value is printed on each Title \nDeed card.",
            "id": "114"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:6:7"
            },
            "page_content": "No rent can be collected on mortgaged properties or utilities, \nbut rent can be collected on unmortgaged properties in the \nsame group.",
            "id": "115"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:6:8"
            },
            "page_content": "In order to lift the mortgage, the owner must pay the Bank the \namount of the mortgage plus 10% interest.",
            "id": "116"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:6:9"
            },
            "page_content": "When all the propert~es of \na color-group are no longer mortgaged, the owner may begin to buy \nback houses at full price.",
            "id": "117"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:6:10"
            },
            "page_content": "The player who mortgages property retains possession of it and \nno other player may secure it by lifting the mortgage from the Bank.",
            "id": "118"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:6:11"
            },
            "page_content": "However, the owner may sell this mortgaged property to another player \nat any agreed price.",
            "id": "119"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:6:12"
            },
            "page_content": "If you are the new owner, you may lift the mortgage \nat once if you wish by paying off the mortgage plus \n10% interest to the Bank.",
            "id": "120"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:6:13"
            },
            "page_content": "If the mortgage is not lifted \nat once, you must pay the Bank 10% interest when \nyou buy the property and if you lift the \nmortgage later you must pay the Bank \nan additional 10% interest as well \nas the amount of the mortgage.",
            "id": "121"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:6:14"
            },
            "page_content": "n ",
            "id": "122"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:0"
            },
            "page_content": "BANKRUPTCY.. You are declared bankrupt if you owe more than you \ncan pay either to another player or to the Bank.",
            "id": "123"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:1"
            },
            "page_content": "If your \n , \ndebt is to another player, you must tum over to that \nplayer all that you have of value and retire from the \ngame.",
            "id": "124"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:2"
            },
            "page_content": "In making this settlement, if you own houses or \nhotels, you must retum these to the Bank in exchange \nfor money to the extent of one-half the amount paid \nfor them; this cash is given to the creditor.",
            "id": "125"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:3"
            },
            "page_content": "If you have \nmortgaged property you also turn this property over \nto your creditor but the new owner must at once pay .",
            "id": "126"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:4"
            },
            "page_content": "the Bank the amount of interest on the loan, which is 10% of the value of \nthe property.",
            "id": "127"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:5"
            },
            "page_content": "The new owner who does this may then, at hislher option, \npay the principal or hold the property until some later turn, then lift the \nmortgage.",
            "id": "128"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:6"
            },
            "page_content": "If helshe holds property in this way until a later turn, helshe \nmust pay the interest again upon lifting the mortgage.",
            "id": "129"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:7"
            },
            "page_content": "Should you owe the Bank, instead of another player, more than you \ncan pay (because of taxes or penalties) even by selling off buildings \nand mortgaging property, you must turn over all assets to the Bank.",
            "id": "130"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:8"
            },
            "page_content": "In \nthis case, the Bank immediately sells by auction all property so taken, \nexcept buildings.",
            "id": "131"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:9"
            },
            "page_content": "A bankrupt player must immediately retire from the \ngame.",
            "id": "132"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:10"
            },
            "page_content": "The last player left in the game wins.",
            "id": "133"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:11"
            },
            "page_content": "MISCEUANEOUS: Money can be loaned to a player only by the Bank \nand then only by mortgaging property.",
            "id": "134"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:12"
            },
            "page_content": "No player may borrow from or \nlend money to another player.",
            "id": "135"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:13"
            },
            "page_content": "L \nWe will be happy to hear your questions or comments about this game.",
            "id": "136"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:14"
            },
            "page_content": "Write to: Hasbro \nGames, Consumer Affairs Dept., P.O.",
            "id": "137"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:15"
            },
            "page_content": "Box 200, Pawtucket, RI 02862.",
            "id": "138"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:16"
            },
            "page_content": "Tel: 888-836-7025 \n(toll free).",
            "id": "139"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:17"
            },
            "page_content": "Canadian consumers please write to: Hasbro Canada Corporation, 2350 de la \nProvince, Longueuil, QC Canada, J4G 1G2.",
            "id": "140"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:18"
            },
            "page_content": "The HASBRO, PARKER BROTHERS, and MONOPOLY names and logos, the distinctive design of \nthe gameboard, the four comer squares, the MR.",
            "id": "141"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:19"
            },
            "page_content": "MONOPOLY name and character, and each of the \ndistinctive elements of the board and rules are trademarks of Hasbro for its property trading game \nand game equipment.",
            "id": "142"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:20"
            },
            "page_content": "02004,2007 Hasbro, Pawtucket, RI 02862.",
            "id": "143"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:21"
            },
            "page_content": "All Rights Reserved.",
            "id": "144"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:22"
            },
            "page_content": "TM & @3 denote U.S.",
            "id": "145"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:23"
            },
            "page_content": "Trademarks.",
            "id": "146"
        },
        {
            "metadata": {
                "id": "data\\monopoly.pdf:7:24"
            },
            "page_content": "00009-1 \n PROOF OF PURCHASE I ",
            "id": "147"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:0:0"
            },
            "page_content": "O\nn a blustery autumn evening five old friends met in the backroom of one of the city\u2019s oldest and most private clubs. Each had\ntraveled a long distance \u2014 from all corners of the world \u2014 to meet on this very specific day\u2026 October 2, 1900 \u2014 28 years to the\nday that the London eccentric, Phileas Fogg accepted and then won a \u00a320,000 bet that he could travel Around the World in 80 Days .",
            "id": "148"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:0:1"
            },
            "page_content": "When the story of Fogg\u2019s triumphant journey filled all the newspapers of the day, the five attended University together.",
            "id": "149"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:0:2"
            },
            "page_content": "Inspired by\nhis impetuous gamble, and a few pints from the local pub, the group commemorated his circumnavigation with a more modest excur-\nsion and wager \u2013 a bottle of good claret to the first to make it to Le Procope in Paris.",
            "id": "150"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:0:3"
            },
            "page_content": "Each succeeding year, they met to celebrate the anniversary and pay tribute to Fogg.",
            "id": "151"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:0:4"
            },
            "page_content": "And each year a new expedition (always mor e\ndifficult) with a new wager (always more expensive) was proposed.",
            "id": "152"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:0:5"
            },
            "page_content": "Now at the dawn of the century it was time for a new impossi-\nble journey.",
            "id": "153"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:0:6"
            },
            "page_content": "The stakes: $1 Million in a winner-takes-all competition.",
            "id": "154"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:0:7"
            },
            "page_content": "The objective: to see which of them could travel by rail to the\nmost cities in North America \u2014 in just 7 days.",
            "id": "155"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:0:8"
            },
            "page_content": "The journey would begin immediately\u2026\nTicket to Ride is a cross-country train adventure.",
            "id": "156"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:0:9"
            },
            "page_content": "Players compete to connect different cities by laying claim to railway routes on a\nmap of North America.",
            "id": "157"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:0:10"
            },
            "page_content": "For 2 - 5 players \nages 8 and above\n30 - 60 minutes\n[T2R] rules EN reprint 2015_TTR2 rules US  06/03/15  17:36  Page2",
            "id": "158"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:1:0"
            },
            "page_content": "Components \nu 1 Board map of North American train routes\nu 240 Colored Train Cars (45 each in Blue, Red, Green, Yellow and Black, plus some extra replacement cars in each color)\nu 144 Illustrated cards:\n- 1 Promotional card for additional maps\n- 1 Days of Wonder Promotional card\nu  5 Wooden Scoring Markers (1 for each player in Blue, Red, Green, Yellow \nand Black)\nu  1 Rules booklet\nu  1 Days of Wonder Online access number\nSetting up the Game\nPlace the board map in the center of the table. Each player takes a set of 45 Colored\nTrain Cars along with its matching Scoring Marker.",
            "id": "159"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:1:1"
            },
            "page_content": "Each player places his Scoring\nMarker on Start \u2202on the Scoring Track running along the map\u2019s border.",
            "id": "160"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:1:2"
            },
            "page_content": "Throughout\nthe game, each time a player scores points, he will advance his marker accordingly.",
            "id": "161"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:1:3"
            },
            "page_content": "Shuffle the Train Car cards and deal a starting hand of 4 cards to each player \u2211.",
            "id": "162"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:1:4"
            },
            "page_content": "Place the remaining deck of Train Car cards near the board and turn the top five cards\nfrom the deck face-up \u220f.",
            "id": "163"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:1:5"
            },
            "page_content": "Place the Longest Path Bonus card face up next to the board \u03c0.",
            "id": "164"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:1:6"
            },
            "page_content": "Shuffle the Destination Ticket cards and deal 3 cards to each player \u222b.",
            "id": "165"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:1:7"
            },
            "page_content": "Each player\nlooks at their Destination Tickets and decides which ones they wish to keep.",
            "id": "166"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:1:8"
            },
            "page_content": "A player\nmust keep at least two, but may keep all three if he chooses.",
            "id": "167"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:1:9"
            },
            "page_content": "Any returned cards are\nplaced on the bottom of the Destination Ticket deck.",
            "id": "168"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:1:10"
            },
            "page_content": "This deck is then placed next to the\nboard \u00aa.",
            "id": "169"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:1:11"
            },
            "page_content": "Players keep their Destination Tickets secret until the end of the game.",
            "id": "170"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:1:12"
            },
            "page_content": "You are now ready to begin.",
            "id": "171"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:1:13"
            },
            "page_content": "Object of the Game \nThe object of the game is to score the highest number of total points.",
            "id": "172"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:1:14"
            },
            "page_content": "Points can be\nscored by: \nu Claiming a Route between two adjacent cities on the map; \nu Successfully completing a Continuous Path of routes between two cities listed on your Destination Ticket(s);\nu Completing the Longest Continuous Path of routes.",
            "id": "173"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:1:15"
            },
            "page_content": "Points are lost if you do not successfully complete the route given on the Destination Ticket(s) you kept.",
            "id": "174"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:1:16"
            },
            "page_content": "T he Game T urn\nThe player who is the most experienced traveler goes first.",
            "id": "175"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:1:17"
            },
            "page_content": "Play then proceeds clockwise around the table, each player taking one turn at a time until\nthe game ends.",
            "id": "176"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:1:18"
            },
            "page_content": "On his turn, a player must perform one (and only one) of the following three actions:\n\u2202\n\u2211\u222b\n\u2211\n\u222b\n\u2211 \u222b\n110 Train Car cards (12 each of Box, Passenger, Tanker, Reefer, Freight, Hopper, Coal, and Caboose cars, plus 14 Locomotives)\n30 Destination Ticket cards\n1 Summary\ncard\n1 Longest Continuous Path\nBonus card\n[T2R] rules EN reprint 2015_TTR2 rules US  06/03/15  17:36  Page3",
            "id": "177"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:0"
            },
            "page_content": "Draw Train Car Cards \u2013 The player may draw 2 Train Car cards. He may take any one of the face-up cards or he may draw the top card from the\ndeck (this is a blind draw).",
            "id": "178"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:1"
            },
            "page_content": "If he draws a face up card, he immediately turns a replacement card face-up from the deck.",
            "id": "179"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:2"
            },
            "page_content": "He then draws his second\ncard, either from the face up cards or from the top of the deck.",
            "id": "180"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:3"
            },
            "page_content": "(See Train Car Cards for special rules for Locomotive cards).",
            "id": "181"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:4"
            },
            "page_content": "Claim a Route \u2013 The player may claim a route on the board by playing a set of Train Car cards that match the color and length of the route and\nthen placing one of his colored trains on each space of this route.",
            "id": "182"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:5"
            },
            "page_content": "He then records his score by moving his Scoring Marker the appropriate number\nof spaces (see Route Scoring Table) along the Scoring Track on the board.",
            "id": "183"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:6"
            },
            "page_content": "Draw Destination Tickets \u2013The player draws 3 Destination Tickets from the top of the deck.",
            "id": "184"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:7"
            },
            "page_content": "He must keep at least one of them, but he may keep\ntwo or all three if he chooses.",
            "id": "185"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:8"
            },
            "page_content": "Any returned cards are placed on the bottom of the deck.",
            "id": "186"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:9"
            },
            "page_content": "T rain Car Cards\nThere are 8 types of regular Train Car cards, plus Locomotive cars.",
            "id": "187"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:10"
            },
            "page_content": "The colors of each type of Train Car card match various routes\nbetween cities on the board \u2013 Purple, Blue, Orange, White, Green, Yellow, Black, and\nRed.",
            "id": "188"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:11"
            },
            "page_content": "Locomotives are Multi-colored and act as a wild card that can be part of any set of\ncards when claiming a route.",
            "id": "189"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:12"
            },
            "page_content": "If a Locomotive card is one of the five face-up cards, the\nplayer who draws it may only draw one card, instead of two.",
            "id": "190"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:13"
            },
            "page_content": "If, after having drawn one\ncard the replacement card is a Locomotive, the player cannot take it.",
            "id": "191"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:14"
            },
            "page_content": "If at any time, three\nof the five face-up cards are Locomotives, all five cards are immediately discarded and\nfive new ones are turned face-up to replace them.",
            "id": "192"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:15"
            },
            "page_content": "Note: If a player is lucky enough to get a Locomotive from the top of the deck in a blind\ndraw, it stills counts as a single card and he may still draw a total of two cards that turn.",
            "id": "193"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:16"
            },
            "page_content": "A player may have any number of cards in his hand at any time.",
            "id": "194"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:17"
            },
            "page_content": "When the deck is exhausted, the discards are reshuffled into a new draw pile deck.",
            "id": "195"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:18"
            },
            "page_content": "The\ncards should be shuffled thoroughly, since all the cards have been discarded in sets.",
            "id": "196"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:19"
            },
            "page_content": "In the unlikely event that there are no cards left in the deck and there are no discards\n(because players are hoarding many cards in their hands), a player cannot draw Train\nCar cards.",
            "id": "197"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:20"
            },
            "page_content": "Instead he may only claim a route or draw Destination Ticket cards.",
            "id": "198"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:21"
            },
            "page_content": "Claiming Routes\nTo claim a route, a player must play a set of cards equal to the number of spaces in the\nroute.",
            "id": "199"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:22"
            },
            "page_content": "A set of cards must be of the same type.",
            "id": "200"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:23"
            },
            "page_content": "Most routes require a specific type of set.",
            "id": "201"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:24"
            },
            "page_content": "For example a Blue route must be claimed using blue-colored Passenger Car cards.",
            "id": "202"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:25"
            },
            "page_content": "Some\nroutes \u2013 those that are Gray colored \u2013 can be claimed using a set of cards of any one color.",
            "id": "203"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:26"
            },
            "page_content": "When a route is claimed, the player places one of his plastic trains in each of the spaces\nof the route.",
            "id": "204"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:27"
            },
            "page_content": "All the cards in the set used to claim the route are then discarded.",
            "id": "205"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:28"
            },
            "page_content": "A player may claim any open route on the board.",
            "id": "206"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:29"
            },
            "page_content": "He is never required to\nconnect to any of his previously played routes.",
            "id": "207"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:30"
            },
            "page_content": "A player may only claim\na maximum of one route, hence connect two adjacent cities, never more,\non his turn.",
            "id": "208"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:31"
            },
            "page_content": "Some cities are connected by Double-Routes .",
            "id": "209"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:32"
            },
            "page_content": "One player cannot claim\nboth routes to the same cities.",
            "id": "210"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:33"
            },
            "page_content": "Important Note:In 2 or 3 player games, only one of the Double-Routes\ncan be used.",
            "id": "211"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:34"
            },
            "page_content": "A player can claim either of the two routes between cities, but\nthe other route is then closed to other players.",
            "id": "212"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:35"
            },
            "page_content": "\u222b \u2211\n\u2211\n\u222b\n\u03c0\n\u220f \u00aa\nTo claim the route from Montr\u00e9al \nto Toronto, a player could use any\nset of Train Car cards, as a long \nas they are the same type.",
            "id": "213"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:36"
            },
            "page_content": "Example 2\nTo claim the route from Montr\u00e9al\nto New York, a player would need \na set of three Blue Passenger \nCar cards.",
            "id": "214"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:2:37"
            },
            "page_content": "Example 1\n[T2R] rules EN reprint 2015_TTR2 rules US  06/03/15  17:36  Page4",
            "id": "215"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:0"
            },
            "page_content": "Route Scoring T able\nWhen a player claims a route, he records the points he receives by\nmoving his Scoring Marker on the Scoring Track:\nDrawing Destination T icket Cards\nA player can use his turn to draw more Destination Ticket cards. To do so, he draws 3 new cards from the top of the Destination Ticket Deck.",
            "id": "216"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:1"
            },
            "page_content": "He must\nkeep at least one of the cards, but may also keep two or all three if he chooses.",
            "id": "217"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:2"
            },
            "page_content": "If there are less than 3 Destination Tickets left in the deck, the player\nonly draws the cards that are available.",
            "id": "218"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:3"
            },
            "page_content": "Any returned cards are placed on the bottom of the Destination Ticket Deck.",
            "id": "219"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:4"
            },
            "page_content": "Each Destination Ticket includes the name of two cities on the map and a Point Value.",
            "id": "220"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:5"
            },
            "page_content": "If a player successfully completes a series of routes that connect\nthe two cities, they will add the amount of points indicated on the Destination Ticket to their point totals at the end of the game.",
            "id": "221"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:6"
            },
            "page_content": "If they do not\nsuccessfully connect the two cities, they deduct the amount of points indicated.",
            "id": "222"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:7"
            },
            "page_content": "Destination Tickets are kept secret from other players until the game's final scoring.",
            "id": "223"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:8"
            },
            "page_content": "A player may have any number of Destination Ticket cards during\nthe game.",
            "id": "224"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:9"
            },
            "page_content": "Game End\nWhen one player\u2019s stock of colored plastic trains gets down to only 0,1 or 2 trains left at the end of his turn, each player, including that player, gets\none final turn.",
            "id": "225"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:10"
            },
            "page_content": "The game then ends and players calculate their final scores.",
            "id": "226"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:11"
            },
            "page_content": "Calculating Scores\nPlayers should have already accounted for the points earned as they completed different routes.",
            "id": "227"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:12"
            },
            "page_content": "To make sure no mistakes were made, you may\nwant to re-count the points for each player\u2019s routes.",
            "id": "228"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:13"
            },
            "page_content": "Players should then reveal all their Destination Tickets and add (or subtract) the value of their Destination Tickets still in hand, based on whether\nthey successfully (or not) connected those cities together.",
            "id": "229"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:14"
            },
            "page_content": "The player who has the Longest Continuous Path of routes receives this special bonus card and adds 10 points to his score.",
            "id": "230"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:15"
            },
            "page_content": "When evaluating and\ncomparing path lengths, only take into account continuous lines of plastic trains of the same color.",
            "id": "231"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:16"
            },
            "page_content": "A continuous path may include loops, and pass\nthrough the same city several times, but a given plastic train may never be used twice in the same continuous path.",
            "id": "232"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:17"
            },
            "page_content": "In the case of a tie for the longest\npath, all tied players score the 10 point bonus.",
            "id": "233"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:18"
            },
            "page_content": "The player with the most points wins the game.",
            "id": "234"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:19"
            },
            "page_content": "If two or more players are tied for the most points, the player who has completed the most Destination\nTickets wins.",
            "id": "235"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:20"
            },
            "page_content": "In the unlikely event that they are still tied, the player with the Longest Continuous Path card wins.",
            "id": "236"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:21"
            },
            "page_content": "1\nRoute Length Points Scored\n2\n3\n4\n5\n6\n1\n2\n4\n7\n10\n15\nCREDITS\nGame design by Alan R.",
            "id": "237"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:22"
            },
            "page_content": "Moon \nIllustrations by Julien Delval\nGraphic Design by Cyrille Daujean \nA special thanks from Alan and DoW to all \nthose who helped play test the game: \nPhil Alberg, Buzz Aldrich, Dave & Jenn Bernazzani, \nPitt Crandlemire, Terry Egan, Brian Fealy, Dave Fontes,\nMatt Horn, Craig Massey,  Janet Moon, \nMark Noseworthy, Mike Schloth, Eric Schultz, \nScott Simon, Rob Simons, Adam Smiles, Tony Soltis, \nRichard Spoonts, Brian Stormont, Rick Thornquist\nDays of Wonder, the Days of Wonder logo, Ticket to Ride - \nthe boardgame and Ticket to Ride Europe are all trademarks or \nregistered trademarks of Days of Wonder, Inc.",
            "id": "238"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:23"
            },
            "page_content": "and copyrights \u00a9 \n2004-2015 Days of Wonder, Inc.",
            "id": "239"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:24"
            },
            "page_content": "All Rights Reserved.",
            "id": "240"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:25"
            },
            "page_content": "WWW.DAYSOFWONDER.COM\nRegister your boardgame\nDays of Wonder Online \nHere is your train ticket to Days of Wonder\nOnline - The online board game\ncommunity where ALL your friends play!",
            "id": "241"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:26"
            },
            "page_content": "Register your game at\nwww.daysofwonder.comto receive online\ndiscounts and discover a web site full of\ngame variants, additional maps and more.",
            "id": "242"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:27"
            },
            "page_content": "Simply click on the New Playerbutton\nand follow the instructions.",
            "id": "243"
        },
        {
            "metadata": {
                "id": "data\\ticket_to_ride.pdf:3:28"
            },
            "page_content": "[T2R] rules EN reprint 2015_TTR2 rules US  06/03/15  17:36  Page1",
            "id": "244"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:0:0"
            },
            "page_content": "AI VIET NAM \u2013 2024\nText Classification with Mamba - Project\nMinh-Duc Bui, Khai-Xuan Trinh, v\u00e0 Quang-Vinh Dinh\nNg\u00e0y 25 th\u00e1ng 2 n\u0103m 2024\nPh\u1ea7n I: Gi\u1edbi thi\u1ec7u\nG\u1ea7n \u0111\u00e2y, Mamba l\u00e0 ki\u1ebfn tr\u00fac m\u1edbi ra m\u1eaft v\u00e0 \u0111\u01b0\u1ee3c s\u1ef1 h\u01b0\u1edfng \u1ee9ng m\u1ea1nh m\u1ebd t\u1eeb c\u1ed9ng \u0111\u1ed3ng c\u00e1c nh\u00e0 nghi\u00ean\nc\u1ee9u. Mamba tr\u1edf th\u00e0nh trend v\u00ec kh\u1ea3 n\u0103ng v\u01b0\u1ee3t tr\u1ed9i h\u01a1n Transformer (ki\u1ebfn tr\u00fac ph\u1ed5 bi\u1ebfn \u1edf th\u1eddi \u0111i\u1ec3m\nhi\u1ec7n t\u1ea1i).",
            "id": "245"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:0:1"
            },
            "page_content": "S\u1ef1 v\u01b0\u1ee3t tr\u1ed9i \u0111\u01b0\u1ee3c th\u1ec3 hi\u1ec7n \u1edf c\u1ea3 3 ti\u00eau ch\u00ed ch\u00ednh \u0111\u1ec3 \u0111\u00e1nh gi\u00e1 1 model: accuracy, speed, v\u00e0\ncomputional cost.",
            "id": "246"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:0:2"
            },
            "page_content": "Trong project n\u00e0y, ta s\u1ebd t\u00ecm hi\u1ec3u c\u01a1 b\u1ea3n v\u1ec1 ki\u1ebfn tr\u00fac Mamba v\u00e0 \u00e1p d\u1ee5ng Mamba v\u00e0o b\u00e0i to\u00e1n text\nclassification.",
            "id": "247"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:0:3"
            },
            "page_content": "1",
            "id": "248"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:1:0"
            },
            "page_content": "AI VIETNAM aivietnam.edu.vn\nPh\u1ea7n II: N\u1ed9i dung\n1. M\u00f4 t\u1ea3 dataset IMDB\nIMDB dataset l\u00e0 b\u1ed9 data bao g\u1ed3m 50,000 \u0111\u00e1nh gi\u00e1 v\u1ec1 phim.",
            "id": "249"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:1:1"
            },
            "page_content": "\u0110\u00e2y l\u00e0 b\u1ed9 d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng cho\nvi\u1ec7c ph\u00e2n lo\u1ea1i \u0111\u00e1nh gi\u00e1 ti\u00eau c\u1ef1c v\u00e0 t\u00edch c\u1ef1c.",
            "id": "250"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:1:2"
            },
            "page_content": "B\u1ed9 d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c chia l\u00e0m 2 ph\u1ea7n b\u1eb1ng nhau, 25,000\nm\u1eabu \u0111\u1ec3 train, v\u00e0 25,000 m\u1eabu \u0111\u1ec3 ki\u1ec3m th\u1eed.",
            "id": "251"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:1:3"
            },
            "page_content": "B\u00ean c\u1ea1nh \u0111\u00f3, b\u1ed9 d\u1eef li\u1ec7u c\u0169ng cung c\u1ea5p 50,000 m\u1eabu d\u1eef\nli\u1ec7u ch\u01b0a \u0111\u00e1nh nh\u00e3n \u0111\u1ec3 h\u1ed7 tr\u1ee3 qu\u00e1 tr\u00ecnh train.",
            "id": "252"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:1:4"
            },
            "page_content": "Tuy nhi\u00ean trong project n\u00e0y ta ch\u1ec9 s\u1eed d\u1ee5ng ph\u1ea7n\nd\u1eef li\u1ec7u \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u00e1nh nh\u00e3n \u0111\u1ec3 train model.",
            "id": "253"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:1:5"
            },
            "page_content": "H\u00ecnh 1: V\u00ed d\u1ee5 minh h\u1ecda v\u1ec1 dataset IMDB.",
            "id": "254"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:1:6"
            },
            "page_content": "2.",
            "id": "255"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:1:7"
            },
            "page_content": "Model Mamba cho b\u00e0i to\u00e1n Text classification\n(a) Install and import libraries:\u0110\u1ea7u ti\u00ean ta s\u1ebd install m\u1ed9t s\u1ed1 th\u01b0 vi\u1ec7n c\u1ea7n thi\u1ebft c\u1ee7a Hug-\ngingface v\u00e0 Mamba:\n1 !pip install datasets evaluate accelerate\n2 !pip install causal-conv1d>=1.1.0\n3 !pip install mamba-ssm\nSau \u0111\u00f3 ta s\u1ebd ti\u1ebfn h\u00e0nh login v\u00e0o HuggingFace \u0111\u1ec3 download dataset v\u00e0 model c\u00f3 s\u1eb5n.",
            "id": "256"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:1:8"
            },
            "page_content": "Khi\nch\u1ea1y block code n\u00e0y th\u00ec HuggingFace s\u1ebd \u0111\u01b0a ra m\u1ed9t \u0111\u01b0\u1eddng d\u1eabn \u0111\u1ebfn trang HuggingFace \u0111\u1ec3\nl\u1ea5y m\u00e3 token.",
            "id": "257"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:1:9"
            },
            "page_content": "L\u01b0u \u00fd \u0111\u1ec3 thu\u1eadn ti\u1ec7n cho qu\u00e1 tr\u00ecnh train v\u00e0 \u0111\u01b0a model l\u00ean Huggingface Hub\nth\u00ec ta n\u00ean s\u1eed d\u1ee5ng token c\u00f3 quy\u1ec1n ghi c\u1ee7a Huggingface.",
            "id": "258"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:1:10"
            },
            "page_content": "1 from huggingface_hub import notebook_login\n2 notebook_login()\nCu\u1ed1i c\u00f9ng ta s\u1ebd import c\u00e1c th\u01b0 vi\u1ec7n ch\u00ednh \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong ph\u1ea7n n\u00e0y:\n2",
            "id": "259"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:2:0"
            },
            "page_content": "AI VIETNAM aivietnam.edu.vn\n1 import os\n2 import random\n3 import json\n4 import torch\n5 import torch.nn as nn\n6 from collections import namedtuple\n7 from dataclasses import dataclass, field, asdict\n8 from mamba_ssm.models.mixer_seq_simple import MambaLMHeadModel\n9 from mamba_ssm.utils.hf import load_config_hf, load_state_dict_hf\n10\n11 import evaluate\n12 import numpy as np\n13 from datasets import load_dataset\n14 from transformers import Trainer\n15 from transformers import AutoTokenizer, TrainingArguments\n(b) Download dataset:\n1 # T\u1ea3i b\u1ed9 dataset\n2 imdb = load_dataset(\"imdb\")\n(c) Build Custom Mamba Model:X\u00e2y d\u1ef1ng model Mamba \u0111\u1ec3 ph\u00e2n lo\u1ea1i v\u0103n b\u1ea3n. 3",
            "id": "260"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:3:0"
            },
            "page_content": "AI VIETNAM aivietnam.edu.vn\n\u2022 Setup config:\n1 # Config class c\u1ee7a Mamba\n2 class MambaConfig:\n3 d_model: int = 2560\n4 n_layer: int = 64\n5 vocab_size: int = 50277\n6 ssm_cfg: dict = field(default_factory=dict)\n7 rms_norm: bool = True\n8 residual_in_fp32: bool = True\n9 fused_add_norm: bool = True\n10 pad_vocab_size_multiple: int = 8\n11\n12 def to_json_string(self):\n13 return json.dumps(asdict(self))\n14\n15 def to_dict(self):\n16 return asdict(self)\n\u2022 \u0110\u1ecbnh ngh\u0129a class head (classifier) \u0111\u1ec3 ph\u1ee5c v\u1ee5 cho vi\u1ec7c ph\u00e2n lo\u1ea1i v\u0103n b\u1ea3n:\n1 # \u0110\u1ecbnh ngh\u0129a class head \u0111\u1ec3 ph\u00e2n lo\u1ea1i\n2 class MambaClassificationHead(nn.Module):\n3 def __init__(self, d_model, num_classes, **kwargs):\n4 super(MambaClassificationHead, self).__init__()\n5 # S\u1eed d\u1ee5ng m\u1ed9t l\u1edbp tuy\u1ebfn t\u00ednh \u0111\u1ec3 th\u1ef1c hi\u1ec7n ph\u00e2n lo\u1ea1i d\u1ef1a tr\u00ean\n\u0111\u1ea7u v\u00e0o c\u00f3 k\u00edch th\u01b0\u1edbc d_model v\u00e0 num_classes c\u1ea7n ph\u00e2n lo\u1ea1i. 6 self.classification_head = nn.Linear(d_model, num_classes,\n**kwargs)\n7\n8 def forward(self, hidden_states):\n9 return self.classification_head(hidden_states)\n\u2022 \u0110\u1ecbnh ngh\u0129a model Mamba:\n1 class MambaTextClassification(MambaLMHeadModel):\n2 def __init__(\n3 self,\n4 config: MambaConfig,\n5 initializer_cfg=None,\n6 device=None,\n7 dtype=None,\n8 ) -> None:\n9 super().__init__(config, initializer_cfg, device, dtype)\n10\n11 # T\u1ea1o m\u1ed9t \u0111\u1ea7u ph\u00e2n lo\u1ea1i s\u1eed d\u1ee5ng MambaClassificationHead v\u1edbi\nk\u00edch th\u01b0\u1edbc \u0111\u1ea7u v\u00e0o l\u00e0 d_model v\u00e0 s\u1ed1 l\u1edbp l\u00e0 2.",
            "id": "261"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:3:1"
            },
            "page_content": "12 self.classification_head = MambaClassificationHead(d_model=\nconfig.d_model, num_classes=2)\n13\n14 del self.lm_head\n15\n16 def forward(self, input_ids, attention_mask=None, labels=None):\n4",
            "id": "262"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:4:0"
            },
            "page_content": "AI VIETNAM aivietnam.edu.vn\n17 # Truy\u1ec1n input_ids qua model g\u1ed1c \u0111\u1ec3 nh\u1eadn hidden_states.",
            "id": "263"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:4:1"
            },
            "page_content": "18 hidden_states = self.backbone(input_ids)\n19\n20 # L\u1ea5y trung b\u00ecnh c\u1ee7a hidden_states theo chi\u1ec1u th\u1ee9 2 \u0111\u1ec3 t\u1ea1o\nra [CLS] feature \u0111\u1ea1i \u0111i\u1ec7n\n21 mean_hidden_states = hidden_states.mean(dim=1)\n22\n23 # \u0110\u01b0a mean_hidden_states qua \u0111\u1ea7u ph\u00e2n lo\u1ea1i \u0111\u1ec3 nh\u1eadn logits.",
            "id": "264"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:4:2"
            },
            "page_content": "24 logits = self.classification_head(mean_hidden_states)\n25\n26 if labels is None:\n27 ClassificationOutput = namedtuple(\"ClassificationOutput\",\n[\"logits\"])\n28 return ClassificationOutput(logits=logits)\n29 else:\n30 ClassificationOutput = namedtuple(\"ClassificationOutput\",\n[\"loss\", \"logits\"])\n31\n32 # S\u1eed d\u1ee5ng h\u00e0m m\u1ea5t m\u00e1t CrossEntropyLoss \u0111\u1ec3 t\u00ednh loss.",
            "id": "265"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:4:3"
            },
            "page_content": "33 loss_fct = nn.CrossEntropyLoss()\n34 loss = loss_fct(logits, labels)\n35\n36 return ClassificationOutput(loss=loss, logits=logits)\n37\n38 def predict(self, text, tokenizer, id2label=None):\n39 input_ids = torch.tensor(tokenizer(text)[\u2019input_ids\u2019],\ndevice=\u2019cuda\u2019)[None]\n40 with torch.no_grad():\n41 logits = self.forward(input_ids).logits[0]\n42 label = np.argmax(logits.cpu().numpy())\n43\n44 if id2label is not None:\n45 return id2label[label]\n46 else:\n47 return label\n48\n49 @classmethod\n50 def from_pretrained(cls, pretrained_model_name, device=None,\ndtype=None, **kwargs):\n51 # T\u1ea3i c\u1ea5u h\u00ecnh t\u1eeb model \u0111\u00e3 \u0111\u01b0\u1ee3c train tr\u01b0\u1edbc \u0111\u00f3. 52 config_data = load_config_hf(pretrained_model_name)\n53 config = MambaConfig(**config_data)\n54\n55 # Kh\u1edfi t\u1ea1o model t\u1eeb c\u1ea5u h\u00ecnh v\u00e0 chuy\u1ec3n n\u00f3 \u0111\u1ebfn thi\u1ebft b\u1ecb v\u00e0 ki\n\u1ec3u d\u1eef li\u1ec7u mong mu\u1ed1n.",
            "id": "266"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:4:4"
            },
            "page_content": "56 model = cls(config, device=device, dtype=dtype, **kwargs)\n57\n58 # T\u1ea3i tr\u1ea1ng th\u00e1i model \u0111\u00e3 \u0111\u01b0\u1ee3c train tr\u01b0\u1edbc \u0111\u00f3.",
            "id": "267"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:4:5"
            },
            "page_content": "59 model_state_dict = load_state_dict_hf(pretrained_model_name,\ndevice=device, dtype=dtype)\n60 model.load_state_dict(model_state_dict, strict=False)\n61\n62 # In ra c\u00e1c tham s\u1ed1 embedding m\u1edbi \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o.",
            "id": "268"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:4:6"
            },
            "page_content": "63 print(\"Newly initialized embedding:\", set(model.state_dict()\n.keys()) - set(model_state_dict.keys()))\n64 return model\n\u2022 Cu\u1ed1i c\u00f9ng ta s\u1ebd t\u1ea3i tr\u1ecdng s\u1ed1 v\u00e0 tokenizer c\u1ee7a model Mamba \u0111\u00e3 \u0111\u01b0\u1ee3c pretrain t\u1eeb tr\u01b0\u1edbc.",
            "id": "269"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:4:7"
            },
            "page_content": "5",
            "id": "270"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:5:0"
            },
            "page_content": "AI VIETNAM aivietnam.edu.vn\nTr\u1ecdng s\u1ed1 c\u1ee7a model Mamba pretrain s\u1ebd kh\u00f4ng bao g\u1ed3m c\u00e1c tham s\u1ed1 c\u1ee7a ph\u1ea7n head\n(classifier) MambaClassificationHead m\u00e0 ta t\u1ef1 \u0111\u1ecbnh ngh\u0129a.",
            "id": "271"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:5:1"
            },
            "page_content": "Do \u0111\u00f3, ph\u1ea7n head n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c\nkh\u1edfi t\u1ea1o tham s\u1ed1 t\u1eeb \u0111\u1ea7u:\n1 # T\u1ea3i model Mamba t\u1eeb model \u0111\u00e3 \u0111\u01b0\u1ee3c train tr\u01b0\u1edbc \u0111\u00f3.",
            "id": "272"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:5:2"
            },
            "page_content": "2 model = MambaTextClassification.from_pretrained(\"state-spaces/mamba\n-130m\")\n3 model.to(\"cuda\")\n4\n5 # T\u1ea3i tokenizer c\u1ee7a model Mamba t\u1eeb model gpt-neox-20b.",
            "id": "273"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:5:3"
            },
            "page_content": "6 tokenizer = AutoTokenizer.from_pretrained(\"EleutherAI/gpt-neox-20b\")\n7 # \u0110\u1eb7t id c\u1ee7a token pad b\u1eb1ng id c\u1ee7a token eos trong tokenizer.",
            "id": "274"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:5:4"
            },
            "page_content": "8 tokenizer.pad_token_id = tokenizer.eos_token_id\n(d) Preprocess dataset:Trong ph\u1ea7n n\u00e0y ta s\u1ebd ti\u1ebfn h\u00e0nh tokenize dataset cho t\u1eadp train v\u00e0 t\u1eadp\ntest.",
            "id": "275"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:5:5"
            },
            "page_content": "V\u00ec s\u1ed1 l\u01b0\u1ee3ng sample c\u1ee7a t\u1eadp test kh\u00e1 l\u1edbn n\u00ean \u0111\u1ec3 thu\u1eadn ti\u1ec7n cho qu\u00e1 tr\u00ecnh train ta s\u1ebd l\u1ea5y\nra 1 ph\u1ea7n nh\u1ecf c\u1ee7a t\u1eadp test \u0111\u1ec3 \u0111\u00e1nh gi\u00e1 model.",
            "id": "276"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:5:6"
            },
            "page_content": "1 # T\u1ea1o ch\u1ee9c n\u0103ng ti\u1ec1n x\u1eed l\u00fd \u0111\u1ec3 m\u00e3 h\u00f3a v\u0103n b\u1ea3n v\u00e0 c\u1eaft b\u1edbt c\u00e1c chu\u1ed7i kh\u00f4ng\nd\u00e0i h\u01a1n \u0111\u1ed9 d\u00e0i \u0111\u1ea7u v\u00e0o t\u1ed1i \u0111a c\u1ee7a m\u00e3 th\u00f4ng b\u00e1o\n2 def preprocess_function(examples):\n3 samples = tokenizer(examples[\"text\"], truncation=True)\n4 # Kh\u00f4ng c\u1ea7n attention_mask\n5 # C\u1ee5 th\u1ec3 h\u01a1n v\u1ec1 token masking c\u1ee7a mamba c\u00f3 th\u1ec3 tham kh\u1ea3o: https://\ngithub.com/state-spaces/mamba/issues/49\n6 samples.pop(\u2019attention_mask\u2019)\n7 return samples\n8\n9 # Th\u1ef1c hi\u1ec7n m\u00e3 h\u00f3a v\u0103n b\u1ea3n\n10 tokenized_imdb = imdb.map(preprocess_function, batched=True)\n11\n12 # Set seed cho h\u00e0m random\n13 random.seed(42)\n14\n15 # T\u1ea1o t\u1eadp train v\u00e0 test\n16 train_dataset = tokenized_imdb[\"train\"]\n17 test_dataset = tokenized_imdb[\"test\"]\n18\n19 # T\u1ea1o t\u1eadp evaluation \u0111\u1ec3 \u0111\u00e1nh gi\u00e1 trong l\u00fac train\n20 # Do s\u1ed1 l\u01b0\u1ee3ng t\u1eadp test l\u1edbn n\u00ean ch\u1ec9 l\u1ea5y m\u1eabu 1% t\u1eadp d\u1eef li\u1ec7u test \u0111\u1ec3 \u0111\u00e1nh\ngi\u00e1\n21 total_samples = len(test_dataset)\n22 eval_samples = int(0.1 * total_samples)\n23 eval_indices = random.sample(range(total_samples), eval_samples)\n24 eval_dataset = test_dataset.select(eval_indices)\n(e) Evaluation metric:\u0110\u1ec3 \u0111\u00e1nh gi\u00e1 performance c\u1ee7a model ta s\u1ebd s\u1eed d\u1ee5ng metric accuracy t\u1eeb\nth\u01b0 vi\u1ec7n evaluate:\n1 # T\u1ea3i module \"accuracy\" t\u1eeb th\u01b0 vi\u1ec7n evaluate. 2 accuracy = evaluate.load(\"accuracy\")\n3\n6",
            "id": "277"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:6:0"
            },
            "page_content": "AI VIETNAM aivietnam.edu.vn\n4 # \u0110\u1ecbnh ngh\u0129a h\u00e0m compute_metrics \u0111\u1ec3 t\u00ednh c\u00e1c \u0111\u1ed9 \u0111o hi\u1ec7u su\u1ea5t (metrics)\ncho vi\u1ec7c \u0111\u00e1nh gi\u00e1 model. 5 def compute_metrics(eval_pred):\n6 predictions, labels = eval_pred\n7\n8 # L\u1ea5y ch\u1ec9 s\u1ed1 c\u1ee7a l\u1edbp c\u00f3 x\u00e1c su\u1ea5t cao nh\u1ea5t trong predictions.",
            "id": "278"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:6:1"
            },
            "page_content": "9 predictions = np.argmax(predictions, axis=1)\n10\n11 # S\u1eed d\u1ee5ng module \"accuracy\" \u0111\u1ec3 t\u00ednh \u0111\u1ed9 ch\u00ednh x\u00e1c d\u1ef1a tr\u00ean\npredictions v\u00e0 labels.",
            "id": "279"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:6:2"
            },
            "page_content": "12 return accuracy.compute(predictions=predictions, references=labels)\n(f) Train model:Sau khi \u0111\u00e3 chu\u1ea9n b\u1ecb xong dataset, ta s\u1ebd ti\u1ebfn h\u00e0nh setup m\u1ed9t s\u1ed1 tham s\u1ed1 trong\nqu\u00e1 tr\u00ecnh train v\u00e0 ti\u1ebfn h\u00e0nh train model.",
            "id": "280"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:6:3"
            },
            "page_content": "\u2022 Tr\u01b0\u1edbc h\u1ebft, ta s\u1ebd \u0111\u1ecbnh ngh\u0129a m\u1ed9t s\u1ed1 hyper-parameter m\u00e0 ta s\u1ebd s\u1eed d\u1ee5ng \u0111\u1ec3 train model:\n1 # \u0110\u1ecbnh ngh\u0129a t\u00ean project \u0111\u1ec3 log th\u00f4ng tin qu\u00e1 tr\u00ecnh train tr\u00ean wandb\n2 # os.environ[\"WANDB_PROJECT\"] = \"mamba_tutorial\"\n3\n4 # \u0110\u1ecbnh ngh\u0129a c\u00e1c tham s\u1ed1 train trong class TrainingArguments.",
            "id": "281"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:6:4"
            },
            "page_content": "5 # C\u1ee5 th\u1ec3 h\u01a1n v\u1ec1 c\u00e1c tham s\u1ed1 h\u1ed7 tr\u1ee3 c\u00f3 th\u1ec3 tham kh\u1ea3o: https://\nhuggingface.co/docs/transformers/main_classes/trainer\n6 training_args = TrainingArguments(\n7 output_dir=\"mamba_text_classification\", # T\u00ean folder output\n8 learning_rate=5e-5,\n9 per_device_train_batch_size=4, # S\u1ed1 l\u01b0\u1ee3ng train sample tr\u00ean m\u1ed7i\ndevice\n10 per_device_eval_batch_size=16, # S\u1ed1 l\u01b0\u1ee3ng eval sample tr\u00ean m\u1ed7i\ndevice\n11 num_train_epochs=1, # S\u1ed1 epoch train\n12 warmup_ratio=0.01, # T\u1ec9 l\u1ec7 t\u0103ng d\u1ea7n lr trong giai \u0111o\u1ea1n warmup\n13 lr_scheduler_type=\"cosine\", # Lo\u1ea1i scheduler \u0111\u1ec3 gi\u1ea3m lr\n14 report_to=\"none\", # \"wandb\" n\u1ebfu mu\u1ed1n log k\u1ebft qu\u1ea3\n15 evaluation_strategy=\"steps\", # X\u00e1c \u0111\u1ecbnh metric \u0111\u00e1nh gi\u00e1 sau m\u1ed7i\ns\u1ed1 b\u01b0\u1edbc\n16 eval_steps=0.1, # S\u1ed1 b\u01b0\u1edbc gi\u1eefa c\u00e1c \u0111\u1ee3t \u0111\u00e1nh gi\u00e1\n17 save_strategy=\"steps\", # X\u00e1c \u0111\u1ecbnh khi n\u00e0o l\u01b0u checkpoint\n18 save_steps=0.1, # S\u1ed1 b\u01b0\u1edbc gi\u1eefa c\u00e1c l\u1ea7n l\u01b0u checkpoint\n19 logging_strategy=\"steps\", # X\u00e1c \u0111\u1ecbnh khi n\u00e0o in th\u00f4ng tin log\n20 logging_steps=1, # S\u1ed1 b\u01b0\u1edbc gi\u1eefa c\u00e1c l\u1ea7n in th\u00f4ng tin log\n21 push_to_hub=True, # \u0110\u1ea9y k\u1ebft qu\u1ea3 l\u00ean Hub\n22 load_best_model_at_end=True, # Load model c\u00f3 k\u1ebft qu\u1ea3 evaluation\nt\u1ed1t nh\u1ea5t trong qu\u00e1 tr\u00ecnh train\n23 )\n\u2022 Sau \u0111\u00f3 ta s\u1ebd kh\u1edfi t\u1ea1o classMambaTrainer k\u1ebf th\u1eeba t\u1eeb classTrainer.",
            "id": "282"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:6:5"
            },
            "page_content": "\u0110\u1ea7u ti\u00ean, ta s\u1ebd t\u1ea1o h\u00e0m\ncompute_loss() \u0111\u1ec3 \u0111\u1ecbnh ngh\u0129a h\u00e0m loss s\u1eed d\u1ee5ng trong qu\u00e1 tr\u00ecnh train.",
            "id": "283"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:6:6"
            },
            "page_content": "V\u00ec ta \u0111\u00e3 tri\u1ec3n khai\nh\u00e0m loss l\u00e0 cross-entropy trong h\u00e0m forward c\u1ee7a model, n\u00ean ta ch\u1ec9 c\u1ea7n tr\u00edch xu\u1ea5t gi\u00e1 tr\u1ecb\nm\u1ea5t m\u00e1t t\u1eeb k\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 c\u1ee7a h\u00e0m forward.",
            "id": "284"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:6:7"
            },
            "page_content": "Sau \u0111\u00f3 ta s\u1ebd ti\u1ebfp t\u1ee5c code h\u00e0msave_model()\n\u0111\u1ec3 \u0111\u1ecbnh ngh\u0129a c\u00e1ch l\u01b0u model.",
            "id": "285"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:6:8"
            },
            "page_content": "\u0110\u1ec3 l\u01b0u model, ta c\u1ea7n ghi l\u1ea1i c\u00e1c tham s\u1ed1, tokenizer, v\u00e0\nc\u1ea5u h\u00ecnh (config) c\u1ee7a model.",
            "id": "286"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:6:9"
            },
            "page_content": "7",
            "id": "287"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:7:0"
            },
            "page_content": "AI VIETNAM aivietnam.edu.vn\n1 # \u0110\u1ecbnh ngh\u0129a m\u1ed9t class MambaTrainer k\u1ebf th\u1eeba t\u1eeb class Trainer.",
            "id": "288"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:7:1"
            },
            "page_content": "2 class MambaTrainer(Trainer):\n3\n4 # \u0110\u1ecbnh ngh\u0129a h\u00e0m compute_loss \u0111\u1ec3 t\u00ednh to\u00e1n h\u00e0m m\u1ea5t m\u00e1t trong qu\u00e1\ntr\u00ecnh train.",
            "id": "289"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:7:2"
            },
            "page_content": "5 def compute_loss(self, model, inputs, return_outputs=False):\n6 # L\u1ea5y gi\u00e1 tr\u1ecb input_ids v\u00e0 labels t\u1eeb inputs.",
            "id": "290"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:7:3"
            },
            "page_content": "7 input_ids = inputs.pop(\"input_ids\")\n8 labels = inputs.pop(\u2019labels\u2019)\n9\n10 # G\u1ecdi h\u00e0m forward c\u1ee7a model v\u1edbi input_ids v\u00e0 labels \u0111\u1ec3 nh\u1eadn\nc\u00e1c k\u1ebft qu\u1ea3.",
            "id": "291"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:7:4"
            },
            "page_content": "11 outputs = model(input_ids=input_ids, labels=labels)\n12\n13 # L\u1ea5y gi\u00e1 tr\u1ecb loss t\u1eeb k\u1ebft qu\u1ea3 c\u1ee7a model.",
            "id": "292"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:7:5"
            },
            "page_content": "14 loss = outputs.loss\n15\n16 # Tr\u1ea3 v\u1ec1 c\u1ea3 loss v\u00e0 outputs n\u1ebfu return_outputs l\u00e0 True, ng\u01b0\u1ee3\nc l\u1ea1i ch\u1ec9 tr\u1ea3 v\u1ec1 loss.",
            "id": "293"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:7:6"
            },
            "page_content": "17 return (loss, outputs) if return_outputs else loss\n18\n19 # \u0110\u1ecbnh ngh\u0129a h\u00e0m save_model \u0111\u1ec3 l\u01b0u model trong qu\u00e1 tr\u00ecnh train. 20 def save_model(self, output_dir = None, _internal_call = False):\n21 # Ki\u1ec3m tra n\u1ebfu th\u01b0 m\u1ee5c l\u01b0u tr\u1eef kh\u00f4ng \u0111\u01b0\u1ee3c ch\u1ec9 \u0111\u1ecbnh, s\u1eed d\u1ee5ng\nth\u01b0 m\u1ee5c m\u1eb7c \u0111\u1ecbnh t\u1eeb \u0111\u1ed1i s\u1ed1 \u2019args\u2019.",
            "id": "294"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:7:7"
            },
            "page_content": "22 if output_dir is None:\n23 output_dir = self.args.output_dir\n24\n25 # N\u1ebfu th\u01b0 m\u1ee5c \u0111\u1ea7u ra kh\u00f4ng t\u1ed3n t\u1ea1i, t\u1ea1o m\u1edbi n\u00f3.",
            "id": "295"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:7:8"
            },
            "page_content": "26 if not os.path.exists(output_dir):\n27 os.makedirs(output_dir)\n28\n29 # L\u01b0u tr\u1ea1ng th\u00e1i c\u1ee7a model PyTorch v\u00e0o file \u2019pytorch_model.",
            "id": "296"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:7:9"
            },
            "page_content": "bin\u2019 trong th\u01b0 m\u1ee5c \u0111\u1ea7u ra.",
            "id": "297"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:7:10"
            },
            "page_content": "30 torch.save(self.model.state_dict(), f\"{output_dir}/\npytorch_model.bin\")\n31\n32 # L\u01b0u tr\u1ea1ng th\u00e1i c\u1ee7a tokenizer v\u00e0o th\u01b0 m\u1ee5c \u0111\u1ea7u ra.",
            "id": "298"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:7:11"
            },
            "page_content": "33 self.tokenizer.save_pretrained(output_dir)\n34\n35 # L\u01b0u c\u1ea5u h\u00ecnh c\u1ee7a model v\u00e0o file \u2019config.json\u2019 trong th\u01b0 m\u1ee5\nc \u0111\u1ea7u ra.",
            "id": "299"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:7:12"
            },
            "page_content": "36 with open(f\u2019{output_dir}/config.json\u2019, \u2019w\u2019) as f:\n37 json.dump(self.model.config.to_dict(), f)\n\u2022 Cu\u1ed1i c\u00f9ng ta s\u1ebd kh\u1edfi t\u1ea1o classMambaTrainer, \u0111\u00e2y l\u00e0 class ch\u00ednh \u0111\u1ec3 train model.",
            "id": "300"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:7:13"
            },
            "page_content": "Sau khi \u0111\u00e3\nkh\u1edfi t\u1ea1o th\u00ec ta ch\u1ec9 c\u1ea7n g\u1ecditrainer.train() th\u00ec qu\u00e1 tr\u00ecnh train model s\u1ebd \u0111\u01b0\u1ee3c ti\u1ebfn h\u00e0nh:\n1 # Kh\u1edfi t\u1ea1o classs MambaTrainer \u0111\u1ec3 th\u1ef1c hi\u1ec7n qu\u00e1 tr\u00ecnh train c\u1ee7a\nmodel.",
            "id": "301"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:7:14"
            },
            "page_content": "2 trainer = MambaTrainer(\n3 model=model, # Model c\u1ea7n train\n4 train_dataset=train_dataset, # D\u1eef li\u1ec7u train\n5 eval_dataset=eval_dataset, # D\u1eef li\u1ec7u \u0111\u00e1nh gi\u00e1\n8",
            "id": "302"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:8:0"
            },
            "page_content": "AI VIETNAM aivietnam.edu.vn\n6 tokenizer=tokenizer, # Tokenizer s\u1eed d\u1ee5ng \u0111\u1ec3 m\u00e3 h\u00f3a d\u1eef li\u1ec7u\n7 args=training_args, # C\u00e1c tham s\u1ed1 train \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a tr\u01b0\u1edbc\n\u0111\u00f3\n8 compute_metrics=compute_metrics # H\u00e0m t\u00ednh c\u00e1c \u0111\u1ed9 \u0111o hi\u1ec7u su\u1ea5t (\nmetrics) cho \u0111\u00e1nh gi\u00e1\n9 )\n10 # B\u1eaft \u0111\u1ea7u qu\u00e1 tr\u00ecnh train b\u1eb1ng c\u00e1ch g\u1ecdi h\u00e0m train() tr\u00ean classs\ntrainer. 11 trainer.train()\n\u2022 Sau khi qu\u00e1 tr\u00ecnh train ho\u00e0n t\u1ea5t, ta s\u1ebd \u0111\u01b0a weight, config c\u1ee7a model l\u00ean HuggingFace\nHub \u0111\u1ec3 l\u01b0u l\u1ea1i:\n1 # \u0110\u1ea9y model l\u00ean huggingface hub\n2 trainer.push_to_hub(commit_message=\"Training complete\")\n3\n4 >> Output: CommitInfo(commit_url=\u2019https://huggingface.co/\ntrinhxuankhai/mamba_text_classification/commit/816827\nae91a91dd9006a9ef66ecefd837382998b\u2019, commit_message=\u2019Training\ncomplete\u2019, commit_description=\u2019\u2019, oid=\u2019816827\nae91a91dd9006a9ef66ecefd837382998b\u2019, pr_url=None, pr_revision=\nNone, pr_num=None)\n(g) Run Testing:Sau khi \u0111\u00e3 ho\u00e0n t\u1ea5t qu\u00e1 tr\u00ecnh train, ta s\u1ebd \u0111\u00e1nh gi\u00e1 model tr\u00ean t\u1eadp test v\u00e0 in\nra k\u1ebft qu\u1ea3 \u0111\u00e1nh gi\u00e1 c\u1ee7a model:\n1 # Th\u1ef1c hi\u1ec7n d\u1ef1 \u0111o\u00e1n tr\u00ean t\u1eadp d\u1eef li\u1ec7u validation\n2 outputs = trainer.predict(test_dataset)\n3 print(outputs.metrics)\n4\n5 >> Output: {\u2019test_loss\u2019: 0.21128389239311218, \u2019test_accuracy\u2019: 0.94708,\n\u2019test_runtime\u2019: 1308.2019, \u2019test_samples_per_second\u2019: 19.11, \u2019\ntest_steps_per_second\u2019: 1.195}\n9",
            "id": "303"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:9:0"
            },
            "page_content": "AI VIETNAM aivietnam.edu.vn\n(h) Load and inference model from Hub:\u1ede ph\u1ea7n tr\u01b0\u1edbc, sau khi ta \u0111\u01b0a model l\u00ean Hugging-\nface Hub, n\u1ebfu mu\u1ed1n inference model ta c\u00f3 th\u1ec3 g\u1ecdi h\u00e0mfrom_pretrained c\u1ee7a model Mamba ta\n\u0111\u00e3 \u0111\u1ecbnh ngh\u0129a \u1edf tr\u01b0\u1edbc \u0111\u1ec3 load pretrain model. Sau \u0111\u00f3 ta s\u1ebd truy\u1ec1n v\u0103n b\u1ea3n c\u1ea7n ph\u00e2n lo\u1ea1i,\ntokenize v\u00e0 id c\u1ee7a t\u1eebng class v\u00f4 h\u00e0mpredict c\u1ee7a model \u0111\u1ec3 th\u1ef1c hi\u1ec7n d\u1ef1 \u0111o\u00e1n k\u1ebft qu\u1ea3.",
            "id": "304"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:9:1"
            },
            "page_content": "1 # T\u1ea3i model Mamba t\u1eeb model \u0111\u00e3 \u0111\u01b0\u1ee3c train tr\u01b0\u1edbc \u0111\u00f3.",
            "id": "305"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:9:2"
            },
            "page_content": "2 model = MambaTextClassification.from_pretrained(\"trinhxuankhai/\nmamba_text_classification\")\n3 model.to(\"cuda\")\n4\n5 # T\u1ea3i tokenizer c\u1ee7a model Mamba t\u1eeb model \u0111\u00e3 \u0111\u01b0\u1ee3c train tr\u01b0\u1edbc \u0111\u00f3.",
            "id": "306"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:9:3"
            },
            "page_content": "6 tokenizer = AutoTokenizer.from_pretrained(\"trinhxuankhai/\nmamba_text_classification\")\n7 # \u0110\u1eb7t id c\u1ee7a token pad b\u1eb1ng id c\u1ee7a token eos trong tokenizer.",
            "id": "307"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:9:4"
            },
            "page_content": "8 tokenizer.pad_token_id = tokenizer.eos_token_id\nSau \u0111\u00e2y ta s\u1ebd ch\u1ea1y th\u1eed m\u1ed9t sample tr\u00ean t\u1eadp test:\n1 id2label = {0: \"NEGATIVE\", 1: \"POSITIVE\"}\n2 text = imdb[\u2019test\u2019][0][\u2019text\u2019]\n3 label = imdb[\u2019test\u2019][0][\u2019label\u2019]\n4 response = model.predict(text, tokenizer, id2label)\n5 print(f\u2019Classify: {text}\\nGT: {id2label[label]}\\nPredict: {response}\u2019)\n6\n7 >> Output:\n8 - Classify: I love sci-fi and am willing to put up with a lot.",
            "id": "308"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:9:5"
            },
            "page_content": "Sci-fi\nmovies/TV are usually underfunded, under-appreciated and\nmisunderstood.",
            "id": "309"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:9:6"
            },
            "page_content": "I tried to like this, I really did, but it is to good\nTV sci-fi as Babylon 5 is to Star Trek (the original).",
            "id": "310"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:9:7"
            },
            "page_content": "9 - GT: NEGATIVE\n10 - Predict: NEGATIVE\n10",
            "id": "311"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:0"
            },
            "page_content": "AI VIETNAM aivietnam.edu.vn\nPh\u1ea7n III: C\u00e2u h\u1ecfi tr\u1eafc nghi\u1ec7m\n1.",
            "id": "312"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:1"
            },
            "page_content": "Trong state space model, d\u1ea1ng recurrent ph\u00f9 h\u1ee3p cho qu\u00e1 tr\u00ecnh inference v\u00ec?",
            "id": "313"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:2"
            },
            "page_content": "(a) Kh\u1ea3 n\u0103ng t\u00ednh to\u00e1n song song.",
            "id": "314"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:3"
            },
            "page_content": "(b) \u0110\u1ed9 ph\u1ee9c t\u1ea1pO(n2).",
            "id": "315"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:4"
            },
            "page_content": "(c) \u0110\u1ed9 ph\u1ee9c t\u1ea1pO(n).",
            "id": "316"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:5"
            },
            "page_content": "(d) Kh\u1ea3 n\u0103ng x\u1eed l\u00fd long sequence.",
            "id": "317"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:6"
            },
            "page_content": "2.",
            "id": "318"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:7"
            },
            "page_content": "Trong state space model, d\u1ea1ng convolutional c\u00f3 t\u00ednh ch\u1ea5t n\u00e0o sau \u0111\u00e2y?",
            "id": "319"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:8"
            },
            "page_content": "(a) \u0110\u1ed9 ph\u1ee9c t\u1ea1pO(n2).",
            "id": "320"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:9"
            },
            "page_content": "(b) Kh\u00f4ng th\u1ec3 t\u00ednh to\u00e1n song song.",
            "id": "321"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:10"
            },
            "page_content": "(c) Kh\u1ea3 n\u0103ng t\u00ednh to\u00e1n song song.",
            "id": "322"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:11"
            },
            "page_content": "(d) Kh\u1ea3 n\u0103ng attention.",
            "id": "323"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:12"
            },
            "page_content": "3.",
            "id": "324"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:13"
            },
            "page_content": "Trong structured state space model (S4), ma tr\u1eadn HiPPO \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 kh\u1edfi t\u1ea1o ma tr\u1eadn A v\u00ec:\n(a) Kh\u1ea3 n\u0103ng t\u00ednh to\u00e1n song song.",
            "id": "325"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:14"
            },
            "page_content": "(b) T\u0103ng tham s\u1ed1 \u0111\u1ec3 model h\u1ecdc.",
            "id": "326"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:15"
            },
            "page_content": "(c) Gi\u1ea3m tham s\u1ed1 \u0111\u1ec3 model h\u1ecdc. (d) T\u0103ng kh\u1ea3 n\u0103ng ghi nh\u1edb sequence.",
            "id": "327"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:16"
            },
            "page_content": "4.",
            "id": "328"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:17"
            },
            "page_content": "Trong state space model, bi\u1ec3u th\u1ee9cDxt trong c\u00f4ng th\u1ee9cyt = Cht + Dxt \u0111\u00f3ng vai tr\u00f2 g\u00ec?",
            "id": "329"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:18"
            },
            "page_content": "(a) Activation function.",
            "id": "330"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:19"
            },
            "page_content": "(b) LayerNorm.",
            "id": "331"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:20"
            },
            "page_content": "(c) Skip-connection.",
            "id": "332"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:21"
            },
            "page_content": "(d) BatchNorm.",
            "id": "333"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:22"
            },
            "page_content": "5.",
            "id": "334"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:23"
            },
            "page_content": "Trong state space model, ta ch\u1ec9 c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng d\u1ea1ng recurrent \u0111\u1ec3 inference l\u00e0 nh\u1eadn \u0111\u1ecbnh:\n(a) True\n(b) False\n6.",
            "id": "335"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:24"
            },
            "page_content": "Trong state space model, d\u1ea1ng convolutional ph\u00f9 h\u1ee3p \u0111\u1ec3 train v\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1pO(n) so v\u1edbiO(n2)\nc\u1ee7a d\u1ea1ng recurrent l\u00e0 nh\u1eadn \u0111\u1ecbnh:\n(a) True\n(b) False\n7.",
            "id": "336"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:25"
            },
            "page_content": "Trong state space model, d\u1ea1ng convolutional ph\u00f9 h\u1ee3p \u0111\u1ec3 train v\u00ec kh\u1ea3 n\u0103ng t\u00ednh to\u00e1n song song l\u00e0\nnh\u1eadn \u0111\u1ecbnh:\n(a) True\n(b) False\n8.",
            "id": "337"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:10:26"
            },
            "page_content": "Trong state space model, d\u1ea1ng recurrent ph\u00f9 h\u1ee3p \u0111\u1ec3 inference v\u00ec c\u00f3 kh\u1ea3 n\u0103ng t\u00ednh to\u00e1n song song\nl\u00e0 nh\u1eadn \u0111\u1ecbnh:\n(a) True\n(b) False\n11",
            "id": "338"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:11:0"
            },
            "page_content": "AI VIETNAM aivietnam.edu.vn\n9.",
            "id": "339"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:11:1"
            },
            "page_content": "Trong state space model, d\u1ea1ng recurrent ph\u00f9 h\u1ee3p \u0111\u1ec3 inference v\u00ec \u0111\u1ed9 ph\u1ee9c t\u1ea1pO(1) khi t\u1ea1o ra t\u1eebng\ntoken l\u00e0 nh\u1eadn \u0111\u1ecbnh:\n(a) True\n(b) False\n10.",
            "id": "340"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:11:2"
            },
            "page_content": "\u0110\u00e2u l\u00e0 contribution c\u1ee7a Mamba?",
            "id": "341"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:11:3"
            },
            "page_content": "(a) Kh\u1ea3 n\u0103ng t\u00ednh to\u00e1n song song \u1edf d\u1ea1ng convolutional.",
            "id": "342"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:11:4"
            },
            "page_content": "(b) Kh\u1ea3 n\u0103ng t\u00ednh to\u00e1n song song \u1edf d\u1ea1ng recurrent.",
            "id": "343"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:11:5"
            },
            "page_content": "(c) Kh\u1ea3 n\u0103ng t\u00ednh to\u00e1n song song \u1edf 2 d\u1ea1ng convolutional v\u00e0 recurrent.",
            "id": "344"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:11:6"
            },
            "page_content": "(d) Kh\u1ea3 n\u0103ng t\u00ednh to\u00e1n song song khi inference.",
            "id": "345"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:11:7"
            },
            "page_content": "11.",
            "id": "346"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:11:8"
            },
            "page_content": "\u0110\u00e2u l\u00e0 contribution c\u1ee7a Mamba?",
            "id": "347"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:11:9"
            },
            "page_content": "(a) Kh\u1ea3 n\u0103ng t\u1ea1o ra tr\u1ecdng s\u1ed1 ph\u1ee5 thu\u1ed9c v\u00e0o input\n(b) Kh\u1ea3 n\u0103ng t\u1ea1o ra tr\u1ecdng s\u1ed1 kh\u00f4ng d\u1ef1a v\u00e0o input.",
            "id": "348"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:11:10"
            },
            "page_content": "(c) Kh\u1ea3 n\u0103ng t\u1ea1o ra tr\u1ecdng s\u1ed1 ph\u1ee5 thu\u1ed9c v\u00e0o label.",
            "id": "349"
        },
        {
            "metadata": {
                "id": "abc\\Mamba.pdf:11:11"
            },
            "page_content": "(d) Kh\u1ea3 n\u0103ng t\u1ea1o ra tr\u1ecdng s\u1ed1 kh\u00f4ng ph\u1ee5 thu\u1ed9c v\u00e0o label. - H\u1ebft -\n12",
            "id": "350"
        }
    ],
    "ids": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "12",
        "13",
        "14",
        "15",
        "16",
        "17",
        "18",
        "19",
        "20",
        "21",
        "22",
        "23",
        "24",
        "25",
        "26",
        "27",
        "28",
        "29",
        "30",
        "31",
        "32",
        "33",
        "34",
        "35",
        "36",
        "37",
        "38",
        "39",
        "40",
        "41",
        "42",
        "43",
        "44",
        "45",
        "46",
        "47",
        "48",
        "49",
        "50",
        "51",
        "52",
        "53",
        "54",
        "55",
        "56",
        "57",
        "58",
        "59",
        "60",
        "61",
        "62",
        "63",
        "64",
        "65",
        "66",
        "67",
        "68",
        "69",
        "70",
        "71",
        "72",
        "73",
        "74",
        "75",
        "76",
        "77",
        "78",
        "79",
        "80",
        "81",
        "82",
        "83",
        "84",
        "85",
        "86",
        "87",
        "88",
        "89",
        "90",
        "91",
        "92",
        "93",
        "94",
        "95",
        "96",
        "97",
        "98",
        "99",
        "100",
        "101",
        "102",
        "103",
        "104",
        "105",
        "106",
        "107",
        "108",
        "109",
        "110",
        "111",
        "112",
        "113",
        "114",
        "115",
        "116",
        "117",
        "118",
        "119",
        "120",
        "121",
        "122",
        "123",
        "124",
        "125",
        "126",
        "127",
        "128",
        "129",
        "130",
        "131",
        "132",
        "133",
        "134",
        "135",
        "136",
        "137",
        "138",
        "139",
        "140",
        "141",
        "142",
        "143",
        "144",
        "145",
        "146",
        "147",
        "148",
        "149",
        "150",
        "151",
        "152",
        "153",
        "154",
        "155",
        "156",
        "157",
        "158",
        "159",
        "160",
        "161",
        "162",
        "163",
        "164",
        "165",
        "166",
        "167",
        "168",
        "169",
        "170",
        "171",
        "172",
        "173",
        "174",
        "175",
        "176",
        "177",
        "178",
        "179",
        "180",
        "181",
        "182",
        "183",
        "184",
        "185",
        "186",
        "187",
        "188",
        "189",
        "190",
        "191",
        "192",
        "193",
        "194",
        "195",
        "196",
        "197",
        "198",
        "199",
        "200",
        "201",
        "202",
        "203",
        "204",
        "205",
        "206",
        "207",
        "208",
        "209",
        "210",
        "211",
        "212",
        "213",
        "214",
        "215",
        "216",
        "217",
        "218",
        "219",
        "220",
        "221",
        "222",
        "223",
        "224",
        "225",
        "226",
        "227",
        "228",
        "229",
        "230",
        "231",
        "232",
        "233",
        "234",
        "235",
        "236",
        "237",
        "238",
        "239",
        "240",
        "241",
        "242",
        "243",
        "244",
        "245",
        "246",
        "247",
        "248",
        "249",
        "250",
        "251",
        "252",
        "253",
        "254",
        "255",
        "256",
        "257",
        "258",
        "259",
        "260",
        "261",
        "262",
        "263",
        "264",
        "265",
        "266",
        "267",
        "268",
        "269",
        "270",
        "271",
        "272",
        "273",
        "274",
        "275",
        "276",
        "277",
        "278",
        "279",
        "280",
        "281",
        "282",
        "283",
        "284",
        "285",
        "286",
        "287",
        "288",
        "289",
        "290",
        "291",
        "292",
        "293",
        "294",
        "295",
        "296",
        "297",
        "298",
        "299",
        "300",
        "301",
        "302",
        "303",
        "304",
        "305",
        "306",
        "307",
        "308",
        "309",
        "310",
        "311",
        "312",
        "313",
        "314",
        "315",
        "316",
        "317",
        "318",
        "319",
        "320",
        "321",
        "322",
        "323",
        "324",
        "325",
        "326",
        "327",
        "328",
        "329",
        "330",
        "331",
        "332",
        "333",
        "334",
        "335",
        "336",
        "337",
        "338",
        "339",
        "340",
        "341",
        "342",
        "343",
        "344",
        "345",
        "346",
        "347",
        "348",
        "349",
        "350"
    ],
    "sources": [
        "monopoly.pdf",
        "ticket_to_ride.pdf",
        "Mamba.pdf"
    ]
}